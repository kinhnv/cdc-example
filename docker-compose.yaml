version: "3.9"
services:
  zookeeper:
    image: quay.io/debezium/zookeeper:1.9
    container_name: zookeeper
  kafka:
    image: quay.io/debezium/kafka:1.9
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local 
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  connect:
    build: 
      context: connect
      dockerfile: Dockerfile
    container_name: connect
    ports:
      - "8083:8083"
    environment:
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - BOOTSTRAP_SERVERS=kafka:9092
      - CONNECT_PLUGIN_PATH=/kafka/connect
  register:
    container_name: register
    image: ubuntu:latest
    depends_on:
      - connect
    restart: "no"
    volumes:
      - ./command.sh:/command.sh
    entrypoint: ["sh", "-c", "apt-get update -y && apt-get install curl -y && sleep 10 && /command.sh"]